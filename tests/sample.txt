{ message_id: 3,
  from:
   { id: 256949175,
     is_bot: false,
     first_name: 'Aman',
     language_code: 'en' },
  chat: { id: 256949175, first_name: 'Aman', type: 'private' },
  date: 1604817801,
  text: '/start',
  entities: [ { offset: 0, length: 6, type: 'bot_command' } ] }

if (checkNewUser(id)) {
    addUser(id, first_name);
  }
  if (text === "/one") {
    add(id, 1, first_name, req, res);
  } else if (text === "/two") {
    add(id, 2, first_name, req, res);
  } else if (text === "/share") {
    add(id, 0.5, first_name, req, res);
  } else if (text === "/minus") {
    add(id, -1, first_name, req, res);
  } else if (text === "/count") {
    // console.log(Data);
    replyToUser(req, res);
  } else if (text.split(" ")[0] == "amanz") {
    newText = text.substring(text.indexOf("amanz") + 6);
    console.log(newText);
    sendMessage(id, newText, req, res);
  } else {
    // console.log(Data);
    // sendMessage(id, "Follow the instructions, bitch", req, res);
  }

  const sendMessage = (id, text, res) => {
  let users = Users.toString();
  resp = Users.toString();
  let usernames = [];
  for (var k in User_names) usernames.push(User_names[k]);
  let data = [];
  for (var k in Data) data.push(Data[k]);
  console.log(`Users: ${users}`);
  console.log(`User names: ${usernames.toString()}`);
  console.log(`Data: ${data.toString()}`);

  axios
    .post(`${url}${apiToken}/sendMessage`, {
      chat_id: id,
      text: `${text}\n${resp}`,
    })
    .then((response) => {
      return res.status(200).send(response);
      console.log("response");
    })
    .catch((error) => {
      console.log("error");
      return res.send(error);
    });
};